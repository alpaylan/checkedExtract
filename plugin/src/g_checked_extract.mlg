
{
   open Pcoq.Prim
}


DECLARE PLUGIN "checked-extract.plugin"

{

(* If we forget this line and include our own tactic definition using
  TACTIC EXTEND, as below, then we get the strange error message
  no implementation available for Tacentries, only when compiling
  theories/Loader.v
*)
open Ltac_plugin
open Pp

(* This module defines the types of arguments to be used in the
   EXTEND directives below, for example the string one. *)
open Stdarg
open Checkedlib

let pr_mlname _ _ _ s = spc () ++ qs s

}

ARGUMENT EXTEND mlname2
  TYPED AS string
  PRINTED BY { pr_mlname }
| [ preident(id) ] -> { id }
| [ string(s) ] -> { s }
END


VERNAC COMMAND EXTEND CheckedExtract CLASSIFIED AS SIDEFF
| [ "CheckedExtract" global(x) string_list(idl) "=>" mlname2(y) ]
  -> { 
   if test_check y then
      Extraction_plugin.Table.extract_constant_inline false x idl y 
   else
      failwith "Typechecking Failed"
  }
END

(* VERNAC COMMAND EXTEND CheckedExtract CLASSIFIED AS SIDEFF
| [ "CheckedExtract" ident(i) ":=" mlname(e) ] ->
   {
      
   }
END *)
